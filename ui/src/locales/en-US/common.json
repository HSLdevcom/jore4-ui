{
  "languages": {
    "fi-FI": "Finnish",
    "en-US": "English"
  },
  "validity": {
    "validDuring": "Valid {{ startDate }} - {{ endDate }}"
  },
  "routes": {
    "root": "Main page",
    "route": "Route",
    "routes": "Routes and lines",
    "save": "Save route",
    "saveSuccess": "Route saved",
    "deleteSuccess": "Route deleted",
    "enterRouteData": "Enter route data",
    "finnishName": "Name of the route",
    "label": "Label",
    "origin": {
      "title": "Origin",
      "name": {
        "fi_FI": "Origin name (Finnish)",
        "sv_FI": "Origin name (Swedish)"
      },
      "shortName": {
        "fi_FI": "Origin short name (Finnish)",
        "sv_FI": "Origin short name (Swedish)"
      }
    },
    "destination": {
      "title": "Destination",
      "name": {
        "fi_FI": "Destination name (Finnish)",
        "sv_FI": "Destination name (Swedish)"
      },
      "shortName": {
        "fi_FI": "Destination short name (Finnish)",
        "sv_FI": "Destination short name (Swedish)"
      }
    },
    "addToLine": "Add to line",
    "onLineId": "Choose line",
    "changingRoutes": "Changing routes",
    "ownLines": "Own lines",
    "showOwnLines": "Only show own lines",
    "showLimit": "Limit",
    "showAll": "Show all",
    "showUnusedStops": "Show unused stops",
    "useTemplateRoute": "Use template route",
    "searchTemplate": "Search for template route",
    "chooseRoute": "Choose route",
    "direction": "Direction",
    "variant": "Hidden variant",
    "chooseDirection": "Choose direction",
    "tooFewStops": "There must be at least two stops on route.",
    "startNotInsideLineValidity": "Route's validity period cannot start before line's validity period.",
    "endNotInsideLineValidity": "Route's validity period cannot exceed the line's validity period.",
    "validityStartIsAfterEnd": "Route's validity period start cannot be after end."
  },
  "lines": {
    "createNew": "Create new line",
    "saveSuccess": "Line saved",
    "properties": "Properties",
    "label": "Label",
    "showNameVersions": "Name versions",
    "description": "Line text",
    "name": {
      "fi_FI": "Line name",
      "sv_FI": "Line name in Swedish"
    },
    "shortName": {
      "fi_FI": "Line short name",
      "sv_FI": "Line short name in Swedish"
    },
    "primaryVehicleMode": "Primary vehicle mode",
    "chooseVehicleMode": "Choose vehicle mode",
    "line": "Line {{ label }}",
    "linesName": "Line's name",
    "typeOfLine": "Line's type",
    "chooseTypeOfLine": "Choose type of line",
    "transportTarget": "Transport target",
    "additionalInformation": "Additional information",
    "routes": "Routes",
    "lines": "Lines",
    "createNewRoute": "Create new route",
    "createNewRouteInstructions": "Route drawing opens in a new window.",
    "cannotCreateRoute": "Cannot create new route for past line.",
    "showDrafts": "Show drafts",
    "draftsTitle": "Drafts",
    "noDrafts": "No drafts",
    "showDraftDetails": "Show draft details",
    "routesOutsideValidity": "The following routes' validity period exceed the line's new validity period",
    "lineNotValidForDay": "The line is not valid on the selected day.",
    "lineMissingDefault": "Unknown error in line information."
  },
  "stops": {
    "stops": "Stops",
    "stopWithLabel": "Stop {{ stopLabel }}",
    "createStop": "Create new stop",
    "publicCode": "Stop label",
    "loadingUsedPublicCodes": "Loading labels …",
    "stopPublicCodePrefixMissmatch": "The stop is located within the borders of ”{{municipality}}” municipality, thus it's label should start with prefix of {{expectedPrefix}}.",
    "stopArea": {
      "label": "Search for Stop Area",
      "search": "Search",
      "searching": "Searching...",
      "help": "Search by writing the name or label of some Stop Area",
      "showDetails": "Language versions and abbreviations"
    },
    "timingPlaceId": "Hastus place",
    "chooseTimingPlace": "Hastus place not selected",
    "noTimingPlace": "No Hastus place",
    "createTimingPlace": "Create new",
    "versionInfoTitle": "Version's validity",
    "nameAddress": "Name and address",
    "saveSuccess": "Stop created",
    "editSuccess": "Stop edited",
    "removeSuccess": "Stop removed",
    "fetchClosestLinkFailed": "Could not resolve infrastructure link for the stop",
    "fetchDirectionFailed": "Could not resolve direction for the stop's infrastructure link",
    "incompatibleDirections": "Direction of the stop and infrastructure link are not compatible. (Is the bus stop on the wrong side of the street?)",
    "notPartOfRoute": "Not part of the route",
    "removeFromRoute": "Remove from route",
    "cannotEditTerminalStops": "Editing the start and end stops of a route is not allowed",
    "addToRoute": "Add to route",
    "stopBreaksRoutes": "The stop to be added is not compatible with the following routes: ({{ routeLabels }})",
    "timingPlaceRequired": "The stop is used as timing place on the following routes: {{ routeLabels }}. Attach timing place or stop using as timing point on the routes.",
    "tiamatUpdateFailed": "Saving the changes into the Stop Registry failed! Routes and lines database has not been updated. Reason: {{ errorMessage }}",
    "stopPointUpdateFailed": "The stop's details have been saved into the Stop Registry, but saving them into the routes and lines database failed! You ought to retry the saving! Reason: {{ errorMessage }}",
    "missingIds": "The Stop Registry and the Lines and Routes database are out of sync. This stop cannot currently be edited."
  },
  "stopArea": {
    "stopArea": "Stop area",
    "copy": "Copy as new version",
    "delete": "Delete stop area",
    "name": "Stop area name",
    "nameSwe": "Name (swedish)",
    "privateCode": "Stop area label",
    "quays": "Member stops",
    "editSuccess": "Stop area edited",
    "errors": {
      "expandToSeeErrors": "Expand Language versions and abbreviations to see errors"
    },
    "noStops": "No stops.",
    "newStopArea": "New stop area"
  },
  "stopAreaDetails": {
    "title": "Stop area",
    "englishNames": "English",
    "basicDetails": {
      "title": "JORE stop area",
      "name": "Stop area name",
      "nameSwe": "Stop area name (swedish)",
      "nameEng": "Name (English)",
      "nameLongFin": "Long name (Finnish)",
      "nameLongSwe": "Long name (Swedish)",
      "nameLongEng": "Long name (English)",
      "abbreviationFin": "Abbreviation (Finnish)",
      "abbreviationSwe": "Abbreviation (Swedish)",
      "abbreviationEng": "Abbreviation (English)",
      "privateCode": "Private code",
      "parentTerminal": "Parent terminal",
      "areaSize": "Stop area size (m²)",
      "validityPeriod": "Validity period",
      "edit": "Edit"
    },
    "minimap": {
      "showOnMap": "Show on map"
    },
    "memberStops": {
      "title": "Stops",
      "addStop": "Add a stop",
      "getStop": "Get stop",
      "transferDate": "Set stop transfer date",
      "moveStopToArea": "Move a stop to stop area",
      "stopVersions": "Stop has the following transferable versions:",
      "menuActions": {
        "remove": "Remove stop from stop area"
      },
      "actionButtons": {
        "remove": "Remove stop from stop area",
        "addBack": "Add back to stop area",
        "getStopVersions": "Get stop versions"
      },
      "confirmRemoval": {
        "title": "Removing stop from the stop area",
        "body": "The Stop will not be deleted, but it will no longer be associated with the stop area."
      },
      "statusTag": {
        "added": "Added",
        "removed": "Removed"
      },
      "futureVersionsAlert": "There are future versions of the stop area. After the transfer, the stop will only belong to the currently viewed version of the stop area. Create a copy of the stop for future versions of the area if necessary.",
      "moveError": "Error moving stop to stop area. Reason:\n{{ reason }}",
      "moveSuccess": "Stop moved to stop area.",
      "errors": {
        "noOriginalQuaysFound": "Original quay information not found.",
        "noNewQuaysFound": "No information found for the moved quay.",
        "originalQuayIdRequired": "Original quay ID is required.",
        "noMappingForQuayId": "No mapping found for quay ID: {{ quayId }}.",
        "stopPointIdRequired": "Stop point ID is required."
      }
    },
    "version": {
      "copy": {
        "title": "Copy as new version",
        "subTitle": "New version details",
        "boilerplate": "All properties of the stop area and the stops valid at the time of start are copied. You can edit the properties of the new version after copying.",
        "success": "New version created\nOpening up new version"
      },
      "cutModal": {
        "title": "Overlapping version",
        "currentVersion": "Current version",
        "newVersion": "New version",
        "cutCurrentVersionToEnd": "Cut current version to end on {{ date }}?",
        "cutCurrentVersionToStart": "Cut current version to start on {{ date }}?"
      },
      "errors": {
        "copy": "Stop area copy failed:\n{{ reason }}",
        "stopPlacesInsertFailed": "Failed to insert stop places. Reason:\n{{ reason }}",
        "failedToResolveNewShelters": "Failed to resolve new shelters. Reason:\n{{ reason }}",
        "stopAreaInsertFailed": "Failed to insert stop area. Reason:\n{{ reason }}",
        "failedToResolveExistingShelter": "Failed to resolve existing shelter. Reason:\n{{ reason }}",
        "copyStopAreaInvalidDateRangeError": "Invalid date range provided for the new version.",
        "overlappingMultipleStopAreaVersions": "Other stop area versions already exist for the selected dates which prevents copying.\nPlease edit other versions before continuing.",
        "stopAreaEditWouldMakeRouteInvalidError": "Copying the stop area would make at least one route invalid due to validity dates.\nBefore continuing please edit the routes that the stops in this stop area are part of."
      }
    },
    "errors": {
      "stopPlacesUniqueName": "Stop area should have unique name but {{name}} is already in use!",
      "stopPlacesUniquePrivateCode": "Stop area should have unique private code but {{privateCode}} is already in use!"
    }
  },
  "stopPlaceTypes": {
    "mainLine": "Main line",
    "interchange": "Interchange",
    "railReplacement": "Rail replacement",
    "virtual": "Virtual"
  },
  "stopDetails": {
    "stopDetails": "Stop details",
    "notValidOnObservationDate": "Stop is not valid on chosen date.",
    "errorWhileGettingStopDetails": "Error while getting stop details.",
    "selectedVersion": {
      "showingSelected": "Showing selected version",
      "showByDate": "Return to observation date"
    },
    "detailTabs": {
      "basic": "Basic information",
      "technical": "Technical features",
      "info": "Info spots"
    },
    "basicDetails": {
      "title": "Basic details",
      "label": "Label",
      "privateCode": "Private code",
      "nameFin": "Name (Finnish)",
      "nameSwe": "Name (Swedish)",
      "nameLongFin": "Long name (Finnish)",
      "nameLongSwe": "Long name (Swedish)",
      "locationFin": "Location (Finnish)",
      "locationSwe": "Location (Swedishi)",
      "abbreviationFin": "Abbreviation (Finnish)",
      "abbreviationSwe": "Abbreviation (Swedish)",
      "transportMode": "Transport type",
      "stopType": "Stop type",
      "stopState": "Stop state",
      "elyNumber": "ELY number",
      "stopInformation": "Stop-specific information"
    },
    "basicAreaDetails": {
      "areaName": "Name (Finnish)",
      "areaNameSwe": "Name (Swedish)",
      "areaNameEng": "Name (English)",
      "areaNameLongFin": "Long name (Finnish)",
      "areaNameLongSwe": "Long name (Swedish)",
      "areaNameLongEng": "Long name (English)",
      "areaAbbreviationFin": "Abbreviation (Finnish)",
      "areaAbbreviationSwe": "Abbreviation (Swedish)",
      "areaAbbreviationEng": "Abbreviation (English)",
      "areaPrivateCode": "Stop area",
      "areaMemberStops": "Member stops ({{count}})",
      "areaNoMemberStops": "No member stops",
      "areaPrivateCodeForm": "Stop area {{privateCode}}"
    },
    "mainLineWarning": "The stop's main line setting and related signage setting do not match.",
    "location": {
      "title": "Location",
      "streetAddress": "Street address",
      "postalCode": "Postal code",
      "municipality": "Municipality",
      "municipalityInputNote": "Municipality is set based on location.",
      "fareZone": "Fare zone",
      "fareZoneInputNote": "Fare zone is set based on location.",
      "latitude": "Latitude",
      "longitude": "Longitude",
      "altitude": "Altitude",
      "functionalArea": "Functional area",
      "signContentType": "Guidance type",
      "platformNumber": "Platform number",
      "memberPlatforms": "Member platforms",
      "terminal": "Terminal",
      "terminalName": "Terminal name",
      "terminalStops": "Terminal stops ({{total}})",
      "input": {
        "functionalArea": "Functional area (m)"
      }
    },
    "signs": {
      "title": "Signs",
      "signType": "Sign type",
      "numberOfFrames": "Number of frames",
      "lineSignage": "Line signage",
      "signageInstructionExceptions": "Signage instruction exceptions",
      "replacesRailSign": "Replaces rail sign",
      "mainLineSign": "Main line sign"
    },
    "measurements": {
      "title": "Measurements and accessibility",
      "stopType": "Stop type",
      "curvedStop": "Curved",
      "shelterType": "Shelter",
      "shelterLaneDistance": "Distance between shelter and lane\u00A0(cm)",
      "curbBackOfRailDistance": "Curb distance from the back of the rail\u00A0(cm)",
      "stopAreaSideSlope": "Stop area side slope\u00A0(%)",
      "stopAreaLengthwiseSlope": "Stop area lengthwise slope\u00A0(%)",
      "structureLaneDistance": "Distance between structure and lane\u00A0(cm)",
      "stopElevationFromRailTop": "Stop height from top of rail\u00A0(cm)",
      "stopElevationFromSidewalk": "Stop height from sidewalk\u00A0(cm)",
      "lowerCleatHeight": "Lower cleat height\u00A0(cm)",
      "curbDriveSideOfRailDistance": "Curb distance from the drive side of the rail\u00A0(cm)",
      "endRampSlope": "End ramp slope\u00A0(%)",
      "serviceAreaWidth": "Service area width\u00A0(m)",
      "serviceAreaLength": "Service area length\u00A0(m)",
      "pedestrianCrossingRampType": "Pedestrian crossing ramp type",
      "stopAreaSurroundingsAccessible": "Stop area surroundings",
      "guidanceType": "Guidance",
      "mapType": "Map",
      "platformEdgeWarningArea": "Platform edge has warning area",
      "sidewalkAccessibleConnection": "Accessible connection to sidewalk",
      "guidanceStripe": "Guidance stripe",
      "serviceAreaStripes": "Service area has stripes",
      "guidanceTiles": "Guidance tiles",
      "accessible": "Accessible",
      "inaccessible": "Inaccessible"
    },
    "maintenance": {
      "title": "Maintenance",
      "maintainers": {
        "cleaning": "Cleaning",
        "infoUpkeep": "Info upkeep (static)",
        "maintenance": "Stop area maintenance",
        "owner": "Shelter owner",
        "winterMaintenance": "Winter maintenance"
      },
      "organisation": {
        "modalTitleEdit": "Edit organisation details",
        "modalTitleCreate": "New organisation",
        "createNewOrganisation": "Create new organisation",
        "modalEditDisclaimer": "Editing contact information will be updated to all instances where this organisation is used.",
        "name": "Organisation name",
        "privateContactDetails": {
          "phone": "Phone",
          "email": "Email"
        }
      }
    },
    "accessibilityLevelDescriptions": {
      "modalTriggerTitle": "Accessibility",
      "modalTitle": "Accessibility levels",
      "fullyAccessible": {
        "item1": "stop area width is at least 1,5 m",
        "item2": "stop elevation is 25-30 cm for trams, 16-25 cm for buses",
        "item3": "lengthwise slope is at most 3 %",
        "item4": "side slope is at most 2 %"
      },
      "mostlyAccessible": {
        "item1": "stop area width is at least 1,5 m",
        "item2": "stop elevation is 25-30 cm for trams, 16-25 cm for buses",
        "item3": "lengthwise slope is at most 5 %",
        "item4": "side slope is at most 3 %"
      },
      "partiallyInaccessible": {
        "item1": "stop area width is at least 1,2 m",
        "item2": "stop elevation is at least 20 cm for trams, at least 12 cm for buses",
        "item3": "lengthwise slope is at most 8 %",
        "item4": "side slope is at most 5 %"
      },
      "inaccessible": {
        "item1": "stop area width is over 1,2 m",
        "item2": "stop elevation is less than 20 cm for trams, less than 12 cm for buses",
        "item3": "lengthwise slope is over 8 %",
        "item4": "side slope is over 5 %"
      },
      "additionalInfo": {
        "title": "\"Fully accessible\" and \"Minor obstacles\" -levels also require stops to have the following properties:",
        "item1": "no objects that could cause a collision hazard",
        "item2": "platform edge has warning area",
        "item3": "shelter and bench",
        "item4": "lighting"
      }
    },
    "shelters": {
      "title": "Shelter ({{count}})",
      "titleNoShelters": "No shelters",
      "shelterNumber": "Shelter number",
      "shelterType": "Type",
      "shelterElectricity": "Electricity",
      "shelterLighting": "Lighting",
      "shelterCondition": "Condition",
      "timetableCabinets": "Timetable cabinets (no.)",
      "trashCan": "Trash can",
      "shelterHasDisplay": "Has display",
      "bicycleParking": "Bicycle parking",
      "leaningRail": "Leaning rail",
      "outsideBench": "Outside bench",
      "shelterFasciaBoardTaping": "Fascia board taping",
      "addShelter": "Add shelter",
      "addNewShelter": "Add new shelter",
      "copyShelter": "Copy shelter",
      "deleteShelter": "Delete shelter",
      "cancelDeleteShelter": "Cancel deletion",
      "shelterExternalId": "Equipment number"
    },
    "infoSpots": {
      "title": "Info spots",
      "titleNoInfoSpots": "No info spots",
      "infoSpot": "Info spot {{infoSpot}}",
      "backlight": "Backlight",
      "description": "Description",
      "floor": "Floor",
      "label": "Label",
      "maintenance": "Maintenance",
      "size": "Poster Place Size",
      "infoSpotType": "Poster Place Type",
      "displayType": "Display Type",
      "speechProperty": "Speech Property",
      "purpose": "Purpose",
      "railInformation": "Rail Information",
      "zoneLabel": "Zone Label",
      "stops": "Stops",
      "terminals": "Terminals",
      "posterLabel": "Label",
      "posterSize": "Size",
      "posterLines": "Additional information",
      "shelterTypeSubtitle": "Shelter {{index}} | {{shelterType}}",
      "addInfoSpot": "Add info spot",
      "addNewInfoSpot": "Add new info spot",
      "deleteInfoSpot": "Delete info spot",
      "cancelDeleteInfoSpot": "Cancel deletion",
      "addInfoSpotPoster": "Add poster",
      "deleteInfoSpotPoster": "Delete poster",
      "noPosters": "No posters",
      "noSheltersInfo": "No info spots. Please go to Technical properties tab and add shelter type first.",
      "type": {
        "static": "Static",
        "dynamic": "Dynamic",
        "sound_beacon": "Sound beacon"
      },
      "displayTypes": {
        "electricTFT": "Electric TFT",
        "batteryOneRow": "Battery, one row",
        "batteryMultiRow": "Battery, multirow",
        "batteryEInk": "Battery, E-ink",
        "chargeableEInk": "Chargeable, E-ink",
        "none": "None"
      },
      "sizes": {
        "standardSizes": "Standard sizes",
        "extraSizes": "Other sizes",
        "unknown": "Unknown",
        "new": "Enter measurements",
        "width": "Width (mm)",
        "height": "Height (mm)"
      }
    },
    "actions": {
      "showVersions": "Versions",
      "extra": {
        "copy": "Make a new copy"
      }
    },
    "version": {
      "copyBoilerPlate": "All properties from the existing stop will be copied over. You can edit the properties of the new copy after its creation.",
      "title": {
        "edit": "Edit version",
        "copy": "Copy a new version",
        "copySubTitle": "New version details",
        "cutTitle": "Overlapping version"
      },
      "fields": {
        "versionName": "Version name",
        "versionDescription": "Reason for change",
        "versionDescriptionNotImplementedYetTitle": "This field has not yet been implemented in this Jore test version!",
        "affectedLines": "Note the effects on the following routes:"
      },
      "cutModal": {
        "currentVersion": "Current version",
        "newVersion": "New version",
        "cutCurrentVersionToEnd": "Cut current version to end on {{ date }}?",
        "cutCurrentVersionToStart": "Cut current version to start on {{ date }}?"
      },
      "success": {
        "edit": "Version edited",
        "copy": "New version created\nOpening up new version"
      },
      "errors": {
        "edit": "Failed to save new version:\n{{ reason }}",
        "copy": "Failed to save copy:\n{{ reason }}",
        "failedToResolveExistingQuays": "Failed to resolve the other stops belonging to the same Stop Area! Reason:\n{{ reason }}",
        "stopPlaceInsertFailed": "Failed to create entry in StopRegistry! Reason:\n{{ reason }}",
        "stopPointInsertFailedStopPlaceReverted": "Failed to create a scheduled stop point in the lines and routers database! Reason:\n{{ reason }}",
        "stopPointInsertFailedStopPlaceNotReverted": "Failed to create a scheduled stop point in the lines and routers database, and the previusly created entry in StopRegistry could be deleted. Jore databases contains errors. Reason:\n{{ reason }}",
        "unableToCutOverlappingStopVersion": "Unable to cut overlapping stop version. Reason:\n{{ reason }}",
        "failedToCutOverlappingStopVersion": "Failed to cut overlapping stop version. Reason:\n{{ reason }}",
        "failedToEditScheduledStopPoint": "Failed to update related Stop point in the Routes and lines DB. Reason:\n{{ reason }}",
        "failedToEditQuayKeyValues": "Failed to update the values stored as KeyVaue pairs on the related Quay In the StopRegistry. Reason::\n{{ reason }}"
      }
    },
    "externalLinks": {
      "externalLinks": "Links",
      "noExternalLinks": "No links",
      "cancelDeleteExternalLink": "Cancel deletion",
      "deleteExternalLink": "Delete link",
      "addExternalLink": "Add new link",
      "name": "Name",
      "location": "Link"
    },
    "alternativeNames": {
      "nameEng": "Name (English)",
      "nameLongFin": "Long name (Finnish)",
      "nameLongSwe": "Long name (Swedish)",
      "nameLongEng": "Long name (English)",
      "abbreviationFin": "Abbreviation (Finnish)",
      "abbreviationSwe": "Abbreviation (Swedish)",
      "abbreviationEng": "Abbreviation (English)"
    },
    "highlightPropertiesRow": {
      "lines": "Lines"
    }
  },
  "terminal": {
    "name": "Terminal name",
    "privateCode": "Terminal label",
    "errors": {
      "expandToSeeErrors": "Expand Language versions and abbreviations to see errors"
    },
    "showDetails": "Language versions and abbreviations",
    "chooseTerminalType": "Choose",
    "saveSuccess": "Terminal created",
    "deleteSuccess": "Terminal deleted",
    "newTerminal": "New terminal"
  },
  "terminalDetails": {
    "title": "Basic details",
    "editSuccess": "Terminal edited",
    "noStops": "No stops.",
    "tabs": {
      "basic": "Terminal",
      "stops": "Stops",
      "stopsWithCount": "Stops ({{ count }})"
    },
    "detailTabs": {
      "basic": "Basic details",
      "info": "Info spots"
    },
    "basicDetails": {
      "title": "Terminal basic details",
      "description": "Description",
      "name": "Name",
      "nameSwe": "Name (Swedish)",
      "nameEng": "Name (English)",
      "nameLongFin": "Long name (Finnish)",
      "nameLongSwe": "Long name (Swedish)",
      "nameLongEng": "Long name (English)",
      "abbreviationFin": "Abbreviation (Finnish)",
      "abbreviationSwe": "Abbreviation (Swedish)",
      "abbreviationEng": "Abbreviation (English)",
      "terminalType": "Terminal type",
      "privateCode": "Private code",
      "departurePlatforms": "Departure platforms",
      "arrivalPlatforms": "Arrival platforms",
      "loadingPlatforms": "Loading platforms",
      "electricCharging": "Electric charging"
    },
    "location": {
      "title": "Location",
      "streetAddress": "Street address",
      "postalCode": "Postal code",
      "municipality": "Municipality",
      "fareZone": "Fare zone",
      "latitude": "Latitude",
      "longitude": "Longitude",
      "memberStopsTotal": "Member stops ({{total}})",
      "memberStops": "Member stops",
      "memberPlatforms": "Member platforms",
      "noMemberStopsSelected": "Terminal must have at least one member stop.",
      "stopAlreadyBelongsToTerminal": "Stop already belongs to another terminal."
    },
    "owner": {
      "title": "Contact details",
      "owner": "Terminal's owner",
      "contractId": "Contract ID",
      "note": "Managed area"
    },
    "infoSpots": {
      "title": "Terminal info spots",
      "infoSpot": "Info spot {{infoSpot}}",
      "infoSpotWithQuay": "Info spot {{infoSpot}} | {{quayPublicCode}} {{quayName}}",
      "addTerminalInfoSpot": "Add terminal info spot",
      "label": "Label",
      "stop": "Stop",
      "shelter": "Shelter",
      "purpose": "Purpose",
      "size": "Size",
      "description": "Description",
      "openDetails": "Open info spot details",
      "closeDetails": "Close info spot details",
      "latitude": "Latitude",
      "longitude": "Longitude",
      "posterDetails": "Additional information"
    },
    "stops": {
      "title": "Stops",
      "addStopToTerminal": "Add stop to terminal"
    },
    "errors": {
      "terminalsUniqueName": "Terminal should have unique name but {{name}} is already in use by another terminal or stop area!",
      "terminalsUniquePrivateCode": "Terminal should have unique private code but {{privateCode}} is already in use by another terminal or stop area!",
      "editMemberStops": "Failed to edit member stops"
    },
    "version": {
      "title": {
        "edit": "Edit validity"
      },
      "fields": {
        "versionName": "Version name",
        "versionDescription": "Reason for change",
        "versionDescriptionNotImplementedYetTitle": "This field has not yet been implemented in this Jore test version!"
      },
      "success": {
        "edit": "Validity edited"
      }
    }
  },
  "terminalTypeEnum": {
    "railwayStation": "Railway station",
    "busTerminal": "Bus terminal",
    "tramTerminal": "Tram terminal",
    "metroTerminal": "Metro terminal",
    "ferryTerminal": "Ferry terminal",
    "ferryStation": "Ferry station"
  },
  "confirmEditTerminalDialog": {
    "title": "Confirm changes",
    "description": "Confirm editing terminal ({{ terminalName }})",
    "confirmText": "OK"
  },
  "confirmDeleteTerminalDialog": {
    "title": "Terminal is being deleted",
    "description_one": "Terminal has {{ count }} member stop. The member stop will not be deleted.",
    "description_other": "Terminal has {{ count }} member stops. The member stops will not be deleted.",
    "deleteTerminalDescription": "Delete terminal?",
    "confirmText": "Delete"
  },
  "stopRegistrySearch": {
    "byAddress": "By address",
    "byLabel": "By label",
    "byLine": "By line label",
    "municipalityPlaceholder": "Choose",
    "lines": "Lines ({{ count }})",
    "stopAreas": "Stop areas ({{ count }})",
    "terminals": "Terminals ({{ count }})",
    "showAllLines": "Show all ({{ count }})",
    "showLessLines": "Show less",
    "failedToFetchStops": "Failed to fetch stops! Reason: {{reason}}",
    "tryToRefetch": "Try to refetch stops",
    "stopAreaLabel": "Stop area {{privateCode}} | {{name}}",
    "terminalLabel": "Terminal {{privateCode}} | {{name}}",
    "showStopAreaOnMap": "Show stop area on the map",
    "sortOrder": "Sort by:",
    "resultCount": "{{count}} search result",
    "resultCount_other": "{{count}} search results",
    "stopsCount": "{{count}} stop",
    "stopsCount_other": "{{count}} stops",
    "stopsCountShort": "{{count}} stop",
    "stopsCountShort_other": "{{count}} stops",
    "goToStopAreaDetails": "Go to stop area details page.",
    "gotoTerminalDetails": "Go to terminal details page.",

    "stopRowActions": {
      "openDetails": "Open stop details page",
      "showOnMap": "Show stop on the map"
    },

    "stopAreaRowActions": {
      "openDetails": "Open stop area details page",
      "showOnMap": "Show stop area on the map"
    },

    "terminalRowActions": {
      "openDetails": "Show terminal details page",
      "showOnMap": "Show terminal on the map"
    },

    "searchFor": {
      "stops": "Stops",
      "stopAreas": "Stop areas",
      "terminals": "Terminals"
    },

    "fieldLabels": {
      "query": "Search",
      "searchFor": "Search for",
      "elyNumber": "ELY number",
      "municipalities": "Municipality",
      "priorities": "Priority",
      "transportMode": "Transport mode",
      "stopState": "Stop state",
      "shelter": "Shelter",
      "electricity": "Electricity",
      "infoSpots": "Info spots"
    },

    "noOptions": {
      "shelter": "No shelter",
      "electricity": "Not defined",
      "infoSpot": "No info spot"
    },

    "sortBy": {
      "label": "Label",
      "name": "Name",
      "address": "Address",
      "sequenceNumber": "Driving order",
      "byStopArea": "By stop area",
      "byTerminal": "By terminal"
    }
  },
  "stopRegistryNamedEntity": {
    "nameFin": "Name (Finnish)",
    "nameSwe": "Name (Swedish)",
    "locationFin": "Location (Finnish)",
    "locationSwe": "Location (Swedish)",
    "nameLongFin": "Long name (Finnish)",
    "nameLongSwe": "Long name (Swedish)",
    "abbreviationFin": "Abbreviation (Finnish)",
    "abbreviationSwe": "Abbreviation (Swedish)"
  },
  "timingPlaces": {
    "label": "New Hastus place",
    "description": {
      "fi_FI": "Description (in Finnish)"
    },
    "create": "Create",
    "labelReserved": "Hastus place with provided name already exists.",
    "saveSuccess": "Hastus place created"
  },
  "navigation": {
    "pageTitle": "{{title}} - Jore4 Test version",
    "logout": "Log out",
    "user": "User"
  },
  "map": {
    "map": "Map",
    "open": "Open map",
    "showRoutes": "Show routes",
    "showNetwork": "Show network",
    "showStops": "Show stops",
    "joreMap": "Jore 4.0 map",
    "pageTitle": "Map",
    "drawRoute": "Draw route",
    "editRoute": "Edit route",
    "addStop": "Add stop",
    "deleteRoute": "Remove route",
    "location": "Location",
    "latitude": "Latitude",
    "longitude": "Longitude",
    "showOnMap": "Show on map",
    "footerActionsTooltip": "Create new...",
    "createNewTerminal": "Create new terminal",
    "createNewStopArea": "Create new stop area",
    "editStopArea": "Stop area {{stopArea}}",
    "error": "Map error: {{message}}"
  },
  "saveChangesModal": {
    "title": "Save changes",
    "validityPeriod": "Validity period",
    "indefinite": "Valid indefinitely",
    "validityConflictTitle": "Check conflicts with existing data",
    "validityConflictBody": "Please change validity times of existing resources or save current changes as draft."
  },
  "confirmDeleteRouteDialog": {
    "title": "Delete route?",
    "description": "Route will be deleted from the line it belongs to.",
    "confirmText": "Delete"
  },
  "confirmDeleteStopDialog": {
    "title": "Delete stop?",
    "description": "Are you sure you want to delete the stop? ({{ stopLabel }})",
    "removedFromRoutes": "Removing the stop affects the following routes: {{ routeLabels }}",
    "confirmText": "Delete"
  },
  "confirmEditStopDialog": {
    "title": "Confirm changes",
    "description": "Confirm stop changes ({{ stopLabel }})",
    "removedFromRoutes": "The stop will be removed from the following routes: {{ routeLabels }}",
    "additionalInfo": "The stop will be moved immediately. If you want to move the stop at a specific time, first copy the stop to a new version in its detail view.",
    "routeWithNVersions": "{{ routeLabel }} ({{ labelCount }} versions)",
    "confirmText": "OK"
  },
  "confirmRouteDraftStopsDialog": {
    "title": "Route has draft stops",
    "description": "Route {{ routeLabel }} has stops with draft priority: {{ stopLabels }}. If you want to keep them on the route, please set their priority to match the route.",
    "confirmText": "Save with draft stops",
    "removeStopsText": "Save without drafts"
  },
  "confirmDeleteReferenceDayDialog": {
    "title": "Reference day will be removed",
    "description": "Reference days can be added again later",
    "confirmText": "Remove",
    "declineText": "Cancel"
  },
  "confirmSubstituteDaySettingsPageLeave": {
    "title": "Unsaved changes",
    "description": "There are unsaved changes in the form. Are you sure you want to exit?",
    "confirmText": "Yes",
    "cancelText": "Return"
  },
  "confirmResetOccasionalSubstitutePeriodDialog": {
    "title": "The changes made will be deleted",
    "description": "There are unsaved changes in the form. Are you sure you want to clear the form?",
    "confirmText": "Yes",
    "cancelText": "Return"
  },
  "confirmResetCommonSubstitutePeriodDialog": {
    "title": "The changes made will be deleted",
    "description": "There are unsaved changes in the form. Are you sure you want to clear the form?",
    "confirmText": "Yes",
    "cancelText": "Return"
  },
  "confirmStopAreaDeletionDialog": {
    "title": "Remove stop area",
    "bodyCanBeDeleted": "Stop area has no member stops and can be deleted.",
    "bodyCanNotBeDeleted": "Stop area still has some member stops and thus can not be deleted. You must first remove the the associated stops completely or move them to another Stop Area.",
    "memberStops": "Member stops:",
    "confirmText": "Remove"
  },
  "confirmEditStopAreaDialog": {
    "title": "Confirm changes",
    "description": "Confirm editing stop area ({{ stopAreaLabel }})",
    "confirmText": "OK"
  },
  "priority": {
    "label": "Priority",
    "labelAndPriority": "Priority: {{priority}}",
    "standard": "Standard",
    "temporary": "Temporary",
    "draft": "Draft",
    "substitute": "Substitute",
    "special": "Special",
    "alreadyEnded": "No longer valid",
    "aboutToEndToday": "No longer valid after today",
    "aboutToEndTomorrow": "No longer valid after tomorrow",
    "aboutToEnd": "No longer valid after {{count}} day",
    "aboutToEnd_other": "No longer valid after {{count}} days"
  },
  "validityPeriod": {
    "validityStart": "Starts",
    "validityEnd": "Ends"
  },
  "vehicleModeEnum": {
    "bus": "Bus",
    "ferry": "Ferry",
    "metro": "Metro",
    "train": "Train",
    "tram": "Tram"
  },
  "stopRegistryTransportModeTypeEnum": {
    "bus": "Bus",
    "metro": "Metro",
    "rail": "Train",
    "tram": "Tram",
    "water": "Ferry"
  },
  "stopPlaceStateEnum": {
    "InOperation": "In operation",
    "OutOfOperation": "Out of operation",
    "PermanentlyOutOfOperation": "Permanently out of operation",
    "Removed": "Removed"
  },
  "stopPlaceSignTypeEnum": {
    "None": "None",
    "StopSign": "Stop sign",
    "CanopyFrame": "Canopy frame",
    "PoleSign": "Pole sign",
    "JokerSign": "Joker sign",
    "Minibuses": "Minibuses"
  },
  "stopRegistryStopTypeEnum": {
    "busBulb": "Bus bulb",
    "inLane": "In lane",
    "pullOut": "Pull out",
    "other": "Other"
  },
  "stopRegistryShelterWidthTypeEnum": {
    "narrow": "Narrow",
    "wide": "Wide",
    "other": "Other"
  },
  "stopRegistryPedestrianCrossingRampTypeEnum": {
    "LR": "LR - Ramp curbstone",
    "RK4": "RK4 - Vertical curbstone",
    "RK4_LR": "RK4+LR - Vertical and ramp curbstone",
    "other": "Other"
  },
  "stopRegistryGuidanceTypeEnum": {
    "braille": "Braille",
    "none": "None",
    "other": "Other"
  },
  "stopRegistryMapTypeEnum": {
    "tactile": "Tactile",
    "other": "Other",
    "none": "None"
  },
  "stopRegistryShelterConditionEnum": {
    "bad": "Bad",
    "good": "Good",
    "mediocre": "Mediocre"
  },
  "stopRegistryShelterElectricityEnum": {
    "continuous": "Continuous",
    "continuousPlanned": "Continuous planned",
    "continuousUnderConstruction": "Continuous under construction",
    "light": "Light",
    "none": "None",
    "temporarilyOff": "Temporarily off"
  },
  "stopRegistryShelterTypeEnum": {
    "concrete": "Concrete",
    "glass": "Glass",
    "post": "Post",
    "steel": "Steel",
    "urban": "Urban",
    "virtual": "Virtual",
    "wooden": "Wooden"
  },
  "signContentTypeEnum": {
    "transportModePoint": "Shield",
    "other": "Fixed sign",
    "none": "None"
  },
  "stopAccessibilityLevelEnum": {
    "fullyAccessible": "Fully accessible",
    "mostlyAccessible": "Minor obstacles",
    "partiallyInaccessible": "Partially inaccessible",
    "inaccessible": "Inaccessible",
    "unknown": "Missing accessibility data"
  },
  "lineTypeEnum": {
    "regional_rail_service": "Regional rail service",
    "suburban_railway": "Suburban railway",
    "metro_service": "Metro service",
    "regional_bus_service": "Regional bus service",
    "stopping_bus_service": "Stopping bus service",
    "special_needs_bus": "Special needs bus",
    "demand_and_response_bus_service": "Demand and response bus service",
    "express_bus_service": "Express bus service",
    "regional_tram_service": "Regional tram service",
    "city_tram_service": "City tram service",
    "ferry_service": "Ferry service"
  },
  "directionEnum": {
    "symbol": {
      "outbound": "1",
      "inbound": "2"
    },
    "label": {
      "outbound": "Outbound",
      "inbound": "Inbound"
    },
    "outbound": "$t(directionEnum.symbol.outbound) - $t(directionEnum.label.outbound)",
    "inbound": "$t(directionEnum.symbol.inbound) - $t(directionEnum.label.inbound)"
  },
  "timetableDayEnum": {
    "noTraffic": "No traffic",
    "monday": "Monday",
    "tuesday": "Tuesday",
    "wednesday": "Wednesday",
    "thursday": "Thursday",
    "friday": "Friday",
    "saturday": "Saturday",
    "sunday": "Sunday"
  },
  "transportTargetEnum": {
    "helsinki_internal_traffic": "Helsinki internal traffic",
    "espoo_and_kauniainen_internal_traffic": "Espoo and Kauniainen internal traffic",
    "vantaa_internal_traffic": "Vantaa internal traffic",
    "kerava_internal_traffic": "Kerava internal traffic",
    "kirkkonummi_internal_traffic": "Kirkkonummi internal traffic",
    "sipoo_internal_traffic": "Sipoo internal traffic",
    "tuusula_internal_traffic": "Tuusula internal traffic",
    "siuntio_internal_traffic": "Siuntio internal traffic",
    "kerava_regional_traffic": "Kerava regional traffic",
    "kirkkonummi_regional_traffic": "Kirkkonummi regional traffic",
    "tuusula_regional_traffic": "Tuusula regional traffic",
    "siuntio_regional_traffic": "Siuntio regional traffic",
    "espoo_regional_traffic": "Espoo regional traffic",
    "vantaa_regional_traffic": "Vantaa regional traffic",
    "transverse_regional": "Transverse regional"
  },
  "formValidation": {
    "required": "Field is required",
    "tooSmall": "Value is too small",
    "tooBig": "Value is too big",
    "timeRange": "Start date has to be before end date.",
    "timeRangeTooLong": "Too long time range",
    "validityDateRangeInPast": "Validity cannot start in the past",
    "stopValidityPeriodOverlap": "Another version of the Stop exists with validity period of {{start}}-{{end}}",
    "stopValidityEndNotDefined": "End date must be given or set ad indefinite",
    "invalidTime": "04:30-28:30",
    "invalidEmail": "Invalid email",
    "substituteDayOfWeek": "Select day",
    "lineTypes": "Select type",
    "Invalid url": "Invalid url"
  },
  "errors": {
    "deleteFailed": "Deletion failed",
    "saveFailed": "Something went wrong",
    "leaveMultipleHandles": "Cannot delete snap point(s)! You should leave at least two of them.",
    "tooFarFromInfrastructureLink": "Make sure each point in route geometry is close enough to the road network. Check coverage of the road network along the route, if necessary.",
    "unauthorized": "Unauthorized, please log in."
  },
  "filters": {
    "title": "Filter view",
    "future": "Future",
    "current": "Current",
    "past": "Past",
    "standard": "Standard",
    "temporary": "Temporary",
    "draft": "Draft",
    "highestPriorityCurrent": "Show situation on the selected date",
    "observationDate": "Observation date",
    "observationDateAdjusted": "Observation date adjusted",
    "stopFiltersAdjusted": "Stop filters adjusted",
    "mapEntityType": {
      "stop": "Stops",
      "stopArea": "Stop areas",
      "terminal": "Terminals",
      "infoScreen": "Info screens",
      "infoSpot": "Info spots",
      "busNetwork": "Bus network"
    }
  },
  "search": {
    "advancedSearchTitle": "Advanced search",
    "searchResultsTitle": "Search results",
    "resultCount": "{{ resultCount }} results",
    "searchPlaceholder": "Enter label",
    "searchLabel": "Search",
    "search": "Search",
    "searching": "Searching...",
    "showMore": "Show more search results"
  },
  "tableHeaders": {
    "name": "Name",
    "edited": "Edited",
    "editor": "Editor"
  },
  "viaModal": {
    "createViaPoint": "Convert stop to a via point",
    "editViaPoint": "Edit via information",
    "viaPointName": {
      "fi_FI": "Via information (Finnish)",
      "sv_FI": "Via information (Swedish)"
    },
    "viaPointShortName": {
      "fi_FI": "Via information short (Finnish)",
      "sv_FI": "Via information short (Swedish)"
    },
    "viaModalTitle": "Via information for route {{ label }}",
    "removeViaInfo": "Remove via information",
    "setViaInfo": "Set via information",
    "viaSaveSuccess": "Via information set",
    "viaRemoveSuccess": "Via information removed"
  },
  "timingSettingsModal": {
    "timingSettings": "Timing settings",
    "timingSettingsModalTitle": "{{ label }} | Timing settings",
    "isUsedAsTimingPoint": "Use Hastus place",
    "isRegulatedTimingPoint": "Is regulated timing point",
    "isLoadingTimeAllowed": "Is loading time allowed",
    "saveSuccess": "Time settings saved"
  },
  "timetables": {
    "timetables": "Timetables",
    "timetableValidity": "Valid {{ validityStart }} - {{ validityEnd }}",
    "scheduleValid": "Schedule valid",
    "departures": "Departures",
    "noSchedules": "No schedules",
    "noTraffic": "No traffic",
    "at": "at {{ time }}",
    "showVersions": "Show versions",
    "versionsTitle": "Timetable versions",
    "operatingCalendar": "Operating calendar",
    "drafts": "Drafts",
    "noDrafts": "No drafts",
    "noTimetables": "No timetables",
    "inEffect": "In effect",
    "tripCount": "{{ count }} trips",
    "interpolated": "Interpolated",
    "showArrivalTimes": "Show arrival times",
    "showAllValid": "Show all valid",
    "operatedLike": "Operated like {{ dayOfWeek }}",
    "noService": "No service",
    "timeline": "Timeline",
    "settingsButton": "Settings",
    "daySettings": "Day settings",
    "filter": "Filter",
    "settings": {
      "periods": {
        "periodName": "Period name",
        "beginDate": "Starts",
        "endDate": "Ends",
        "beginTime": "Time",
        "endTime": "Time",
        "lineTypes": "Linetypes",
        "substituteDayOfWeek": "Substitute day"
      },
      "commonDays": {
        "substituteDayOfWeek": "Substitute day",
        "lineTypes": "Linetypes"
      },
      "addRow": "Add new substitute day",
      "filterLineType": "Show linetype",
      "beginDate": "Starts",
      "endDate": "Ends",
      "saveSuccess": "Save successful",
      "commonSubstituteDays": "Common substitute days",
      "occasionalSubstituteDays": "Occasional substitute days",
      "deleteSuccess": "Delete successful",
      "deleteFailed": "Delete failed"
    },
    "observationPeriodForm": {
      "startDate": "Starts",
      "endDate": "Ends",
      "warningMessage": "Save or discard the form changes",
      "observationPeriodAdjusted": "Filtering period has been changed"
    },
    "chooseSubstituteDay": "Select...",
    "versions": {
      "deleteTimetable": "Delete timetable",
      "showInfo": "Show info"
    }
  },
  "timetablesImportPriorityForm": {
    "specialDayDisabledExplanation": "Single day timetables are always handled as special days."
  },
  "timetablesPreview": {
    "attention": "Attention",
    "closePreview": "Close preview",
    "blockCount": "{{ count }} blocks",
    "closeContent": "Close content",
    "contentUsage": "Content usage",
    "departures": "Departures: {{ count }}",
    "deviations": "Deviations ({{ count }})",
    "fileContent": "File content",
    "vehicleType": "Vehicle type - {{vehicleTypeName}}",
    "missingRoutes": "Missing routes:",
    "preview": "Preview",
    "save": "Save timetables",
    "showContent": "Show content",
    "summary": "Summary",
    "tableHeaders": {
      "routeLabel": "Label",
      "departureTime": "Departure",
      "endTime": "Arrival",
      "dayType": "Day type",
      "validityStarts": "Starts",
      "validityEnds": "Ends",
      "contractNumber": "Contract number"
    },
    "missingRouteDeviations": {
      "deviationFetchFailed": "Failed to fetch missing routes",
      "deviationsWarning": "The Hastus file is missing the schedules of the routes previously imported. These expire with this recording. If you want, import them separately or add them to this file."
    },
    "duplicateJourneys": {
      "title": "Duplicate journeys",
      "description": "Notice duplicate journeys. The following journeys are present in both current and imported timetables with same contract number:"
    }
  },
  "timetablesSubmitFailure": {
    "modalTitle": "Saving timetables failed",
    "errors": {
      "unknown": "Saving imported timetables failed: unknown error.",
      "conflictingSchedules": "Saving imported timetables failed: overlapping vehicle schedule frames detected.",
      "multipleTargetFramesFound": "Imported timetables could not be combined: multiple possible target timetables found.",
      "sequentialIntegrityError": "Saving imported timetables failed: journeys or blocks overlap.",
      "stagingVehicleScheduleFrameNotFound": "Saving imported timetables failed: timetable not found.",
      "targetVehicleScheduleFrameNotFound": "Saving imported timetables failed: target timetable not found.",
      "transactionSystemError": "Saving imported timetables failed: database constraints prevented saving."
    }
  },
  "timetableVersionsTableHeaders": {
    "status": "Status",
    "dayType": "Day type",
    "validityStart": "Starts",
    "validityEnd": "Ends",
    "label": "Label",
    "version": "Version",
    "modified": "Modified",
    "modifier": "Modifier"
  },
  "confirmTimetablesAbortImportDialog": {
    "title": "Abort importing timetables",
    "description": "The imported timetables will not be saved to JORE.",
    "abort": "Do not abort",
    "confirm": "Abort import"
  },
  "confirmTimetablesImportModal": {
    "title": "Save changes",
    "priority": "Timetables' priority",
    "importStrategy": {
      "title": "Import strategy",
      "combine": "Combine timetables",
      "replace": "Replace timetables"
    }
  },
  "changeTimetablesValidityModal": {
    "title": "Save changes",
    "validity": "Timetable validity",
    "noticeChangesInRoutes": "The change affects the timetables of following routes",
    "saveSuccess": "Timetable validity saved"
  },
  "import": {
    "importTimetables": "Import timetables",
    "importTimetablesFromHastus": "Import timetables from Hastus",
    "importSuccess": "Timetables imported successfully!",
    "combineSameContractWarning": "You are about to combine timetables with same contract number. This is typically not done.",
    "specialDayMixedPrioritiesWarning1": "Imported timetables contain special days and other timetables.",
    "specialDayMixedPrioritiesWarning2": "Importing not possible. Cancel the import and import one day priority timetables separately.",
    "dragAndDrop": "Drag and drop Hastus files or",
    "abort": "Abort",
    "abortedSuccessfully": "Timetables import aborted.",
    "openPreview": "Open preview",
    "uploadFiles": "Upload files",
    "browse": "Browse",
    "filesToUpload": "Files to upload",
    "fileUploadSuccess": "Uploading file {{ filename }} succeeded",
    "fileUploadFailed": "Uploading file {{ filename }} failed",
    "errorModalTitle": "Failed to upload one or more timetables",
    "incorrectFileFormat": "One or more of the files were not added. Only .exp and .csv files are accepted."
  },
  "export": {
    "startSelecting": "Select",
    "quitSelecting": "Quit selecting",
    "exportSelected": "Export selected to Hastus",
    "notEligibleRoutesForExport": "Following routes are not eligible for export: {{ routes }}. First and last stop has to be used as Hastus-place.",
    "hastusErrorTitle": "Failed to export to Hastus",
    "tooltip": "Export selected to Hastus",
    "disabledTooltip": "Select only one priority for the search to be able to export routes to Hastus."
  },
  "hastusApiErrors": {
    "cannotFindJourneyPatternRefByRouteLabelAndDirectionError": "Could not find journey pattern reference whose label and direction corresponds to the Hastus trip. Make sure that the timetable has been created based on route exported from JORE4.",
    "cannotFindJourneyPatternRefByStopPointLabelsError": "Could not find matching journey pattern reference whose stop points correspond to the Hastus trip. Check if the route has been modified but not yet exported to Hastus.",
    "cannotFindJourneyPatternRefByTimingPlaceLabelsError": "Could not find matching journey pattern reference whose timing place labels correspond to the Hastus trip. Check if the route has been modified but not yet exported to Hastus.",
    "errorWhileProcessingHastusDataError": "Error while processing Hastus data.",
    "firstStopNotTimingPointError": "The first stop point in the journey pattern is not a timing point.",
    "graphQLAuthenticationFailedError": "A GraphQL authentication error occurred.",
    "illegalArgumentError": "An error occurred due to an illegal argument.",
    "invalidHastusDataError": "Invalid Hastus data.",
    "lastStopNotTimingPointError": "The last stop point in the journey pattern is not a timing point.",
    "tooFewStopPointsError": "Too few stop points in the journey pattern.",
    "unknownError": "Unknown error."
  },
  "deleteTimetableModal": {
    "title": "Remove schedule",
    "description": "The schedule will be deleted and cannot be restored",
    "affectedRoutesText": "The schedules will be removed from the following routes",
    "confirmText": "Delete",
    "cancelText": "Do not delete",
    "errorModalTitle": "Failed to delete timetable",
    "errorMessage": "Error deleting timetable"
  },
  "save": "Save",
  "saving": "Saving",
  "edit": "Edit",
  "move": "Move",
  "moving": "Moving",
  "loading": "Loading",
  "cancel": "Cancel",
  "close": "Close",
  "cut": "Cut",
  "version": "Version: {{ version }}",
  "hide": "Hide",
  "all": "All",
  "unknown": "Unknown",
  "selected": " {{ count }} selected",
  "yes": "Yes",
  "no": "No",
  "remove": "Remove",
  "welcomePage": {
    "heading": "JORE4 | Testing of the stop register is now starting",
    "subheading1": "Stops and info spots",
    "paragraph1": "The implementation of JORE4 has progressed to the stop register. In the previous phase, Routes and Lines as well as Timetables were implemented. You can now search for stops and stop areas using a few search criteria, update stop attributes, and manage info spots. The test version uses real stop data, but it allows testing and updates without affecting the production environment. We value your feedback on where to focus our efforts next. Feedback will be collected through interviews, and it can also be sent directly via Teams or Slack on the JORE4 channels.",
    "subheading2": "Development continues",
    "paragraph2": "Based on the feedback we receive, we will prioritize key development areas. As development progresses, new functionalities will be added. Next, work will continue on areas such as terminals.",
    "login": "Login"
  },
  "dayOfWeek": {
    "monday": "Monday",
    "tuesday": "Tuesday",
    "wednesday": "Wednesday",
    "thursday": "Thursday",
    "friday": "Friday",
    "saturday": "Saturday",
    "sunday": "Sunday"
  },
  "alert": {
    "important": {
      "topic": "Validity ending without continity",
      "description": "Validity will end within 20 days and there is no incoming replacement."
    },
    "warning": {
      "topic": "Temporary version will change",
      "description": "Validity will end within 20 days."
    }
  },
  "stopVersion": {
    "title": "Versions | Stop {{publicCode}}",
    "titleWithName": "Versions | Stop {{publicCode}} {{name}}",
    "loading": "Loading version information",
    "goBack": "Go back",
    "scheduled": {
      "title": "Scheduled",
      "show": "Show scheduled",
      "hide": "Hide scheduled",
      "noVersions": "No scheduled versions in the selected time range."
    },
    "drafts": {
      "title": "Drafts",
      "show": "Show drafts",
      "hide": "Hide drafts",
      "noVersions": "The stop has no draft verisons."
    },
    "header": {
      "status": "Status",
      "validity_start": "Valid from",
      "validity_end": "Valid to",
      "version_comment": "Version name",
      "changed": "Changed",
      "changed_by": "Changed by"
    },
    "status": {
      "active": "Active",
      "standard": "$t(priority.standard)",
      "temporary": "$t(priority.temporary)",
      "draft": "$t(priority.draft)"
    }
  },
  "dataModelRefactor": {
    "disabled": "This feature has been disabled due to the revent Data model refactorings, and in general due to the ongoing development of the Stop Registry features. This feature is being worked on and should be re-enabled soon."
  },
  "navigationBlock": {
    "title": "Discard changes?",
    "body": "You have unsaved changes on the one of the form in the current page, if you leave now, you will lose your changes.",
    "proceed": "Discard changes",
    "cancel": "Continue editing"
  }
}
