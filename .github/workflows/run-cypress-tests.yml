name: Run cypress tests

on:
  # when this workflow will use pre-built docker images, it will only be called by an upstream job,
  # it won't be executed directly.
  # workflow_call:
  push:
    branches:
      - main
  pull_request:

jobs:
  run_cypress_tests:
    name: Run cypress e2e tests locally
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract metadata to env variables
        uses: HSLdevcom/jore4-tools/github-actions/extract-metadata@extract-metadata-v1

      # TODO: this should be replaced with the setup-e2e-environment-v1 action when
      # we don't need to rely on hasura seed data anymore for the e2e tests.
      # For now however, we don't have a way to reliably choose a seed-data version of the hasura
      # image that is certainly compatible with the tested UI image
      # Note: we don't start mbtiles, jore3importer and mssqltestdb to save memory for the github runner
      # Note: we don't start auth backend as we anyway mock the login
      - name: Start e2e env
        run: |
          curl -L https://github.com/HSLdevcom/jore4-flux/releases/download/e2e-docker-compose/e2e-docker-compose.tar.gz --silent | tar -xzf - -C ./docker/
          docker-compose \
           -f ./docker/docker-compose.yml \
           -f ./docker/docker-compose.custom.yml \
           -f ./docker/docker-compose.local-ui.yml \
           up --build -d \
           jore4-testdb jore4-hasura jore4-mapmatchingdb jore4-mapmatching jore4-ui jore4-proxy

      - name: Verify that all services are up and running
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: '[ -z "$(docker ps -q --filter health=unhealthy --filter health=starting)" ]'

      - name: Setup caching for node_modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install yarn dependencies && check that lockfile is up-to-date
        run: yarn --frozen-lockfile

      - name: Fix the missing cypress binary in case it did not get retrieved from cache
        run: yarn cypress install

      - name: Run cypress tests
        run: |
          CYPRESS_DISABLE_MAP_TILES=true yarn test:e2e

      - name: Upload test results as an artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: cypress-local-reports
          path: |
            ${{ github.workspace }}/cypress/reports

  # Note: this is a temporary solution for now. Should replace this with image from docker hub
  # when we have the jore4-cypress repository created
  run_cypress_docker:
    name: Run cypress e2e tests locally with docker
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract metadata to env variables
        uses: HSLdevcom/jore4-tools/github-actions/extract-metadata@extract-metadata-v1

      # TODO: this should be replaced with the setup-e2e-environment-v1 action when
      # we don't need to rely on hasura seed data anymore for the e2e tests.
      # For now however, we don't have a way to reliably choose a seed-data version of the hasura
      # image that is certainly compatible with the tested UI image
      # Note: we don't start mbtiles, jore3importer and mssqltestdb to save memory for the github runner
      # Note: we don't start auth backend as we anyway mock the login
      - name: Start e2e env
        run: |
          curl -L https://github.com/HSLdevcom/jore4-flux/releases/download/e2e-docker-compose/e2e-docker-compose.tar.gz --silent | tar -xzf - -C ./docker/
          docker-compose \
           -f ./docker/docker-compose.yml \
           -f ./docker/docker-compose.custom.yml \
           -f ./docker/docker-compose.local-ui.yml \
           up --build -d \
           jore4-testdb jore4-hasura jore4-mapmatchingdb jore4-mapmatching jore4-ui jore4-proxy

      - name: Verify that all services are up and running
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: '[ -z "$(docker ps -q --filter health=unhealthy --filter health=starting)" ]'

      - name: Build and run the the docker image containing the cypress tests
        run: |
          export DOCKER_COMPOSE_CMD="docker-compose -f ./docker/docker-compose.cypress.yml"

          # build the cypress docker image and include all e2e tests
          $DOCKER_COMPOSE_CMD build jore4-cypress
          $DOCKER_COMPOSE_CMD run --name cypress jore4-cypress yarn test:e2e

      - name: Retrieve test results from container
        if: ${{ always() }}
        run: |
          docker cp cypress:/e2e/cypress/reports ${{ github.workspace }}/cypress/

      - name: Upload test results as an artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: cypress-docker-reports
          path: |
            ${{ github.workspace }}/cypress/reports
