name: Run cypress tests

on:
  # this workflow is only called by others, won't be executed on itself
  # as it uses the pre-built docker image that is produced in the upstream job
  workflow_call:

jobs:
  run_cypress_tests:
    name: Run cypress e2e tests from docker
    runs-on: ubuntu-20.04
    env:
      CYPRESS_IMAGE_NAME: hsldevcom/jore4-cypress

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract metadata to env variables
        uses: HSLdevcom/jore4-tools/github-actions/extract-metadata@extract-metadata-v1

      # TODO: this should be replaced with the setup-e2e-environment-v1 action when
      # we don't need to rely on hasura seed data anymore for the e2e tests.
      # For now however, we don't have a way to reliably choose a seed-data version of the hasura
      # image that is certainly compatible with the tested UI image
      # Note: we don't start mbtiles, jore3importer and mssqltestdb to save memory for the github runner
      # Note: we don't start auth backend as we anyway mock the login
      - name: Start e2e env
        run: |
          # pin the just-built version of the UI image
          export UI_DOCKER_IMAGE="$IMAGE_NAME:$COMMIT_ID"

          curl -L https://github.com/HSLdevcom/jore4-flux/releases/download/e2e-docker-compose/e2e-docker-compose.tar.gz --silent | tar -xzf - -C ./docker/
          docker-compose \
           -f ./docker/docker-compose.yml \
           -f ./docker/docker-compose.custom.yml \
           up -d \
           jore4-testdb jore4-hasura jore4-mapmatchingdb jore4-mapmatching jore4-ui jore4-proxy

      - name: Verify that all services are up and running
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: '[ -z "$(docker ps -q --filter health=unhealthy --filter health=starting)" ]'

      - name: Run the the docker image containing the cypress tests
        run: |
          # pin the just-built version of the cypress image
          export CYPRESS_DOCKER_IMAGE="$CYPRESS_IMAGE_NAME:$COMMIT_ID"

          # run the e2e tests from the docker image
          # note: need to explicitly name the container here to be able to reference it later
          docker-compose -f ./docker/docker-compose.cypress.yml run --name cypress jore4-cypress yarn test:e2e

      - name: Retrieve test results from container
        if: ${{ always() }}
        run: |
          docker cp cypress:/e2e/cypress/reports ${{ github.workspace }}/cypress/

      - name: Upload test results as an artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: cypress-docker-reports
          path: |
            ${{ github.workspace }}/cypress/reports
