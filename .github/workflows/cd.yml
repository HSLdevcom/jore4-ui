name: Docker Build & Push

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  push_to_registry:
    name: Build & Push docker image to dockerhub
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract metadata to env variables
        uses: HSLdevcom/jore4-tools/github-actions/extract-metadata@extract-metadata-v1

      - name: Pull previous image to support caching
        run: docker pull $IMAGE_NAME:builder || echo "Previous builder image not found"

      - name: Build dependencies & source code into builder image to support caching
        run: docker build --cache-from=$IMAGE_NAME:builder --target build -t $IMAGE_NAME:builder --build-arg NEXT_PUBLIC_GIT_HASH=$GITHUB_SHA .

      - name: Build docker image for distribution
        run: docker build --cache-from=$IMAGE_NAME:builder --cache-from=$IMAGE_NAME:latest -t $IMAGE_NAME:dev --build-arg NEXT_PUBLIC_GIT_HASH=$GITHUB_SHA .

      - name: Tag docker image as 'latest'
        if: ${{ github.ref == 'refs/heads/main' }}
        run: docker tag $IMAGE_NAME:dev $IMAGE_NAME:latest

      - name: Tag docker image as '<branch_name>-<git_commit_sha>'
        run: docker tag $IMAGE_NAME:dev $IMAGE_NAME:$COMMIT_ID

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.JORE4_DOCKERHUB_USER }}
          password: ${{ secrets.JORE4_DOCKERHUB_TOKEN }}

      - name: Push image tagged with git commit details to Docker Hub
        run: docker push $IMAGE_NAME:$COMMIT_ID

      - name: Push rest of the tags to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker push $IMAGE_NAME:builder
          docker push $IMAGE_NAME:latest

  run_e2e_tests_from_main:
    needs: push_to_registry
    name: Run default jore4-robot e2e tests
    runs-on: ubuntu-20.04
    steps:
      - name: Extract metadata to env variables
        uses: HSLdevcom/jore4-tools/github-actions/extract-metadata@extract-metadata-v1

      - name: start e2e env
        uses: HSLdevcom/jore4-flux/github-actions/setup-e2e-environment@setup-e2e-environment-v1
        with:
          ui_version: $IMAGE_NAME:$COMMIT_ID

      - name: run e2e smoke tests
        id: tests
        uses: HSLdevcom/jore4-robot/github-actions/run-rf-tests@actions-v1
        with:
          included_tag: smoke
          e2e_username: ${{ secrets.ROBOT_HSLID_EMAIL }}
          e2e_password: ${{ secrets.ROBOT_HSLID_PASSWORD }}

      - name: upload test results
        if: always()
        uses: HSLdevcom/jore4-robot/github-actions/upload-results@actions-v1

  run_e2e_tests_from_branch:
    needs: push_to_registry
    name: Run e2e tests from jore4-robot branch
    runs-on: ubuntu-20.04
    steps:
      - name: Extract metadata to env variables
        uses: HSLdevcom/jore4-tools/github-actions/extract-metadata@extract-metadata-v1

      - name: start e2e env
        uses: HSLdevcom/jore4-flux/github-actions/setup-e2e-environment@setup-e2e-environment-v1
        with:
          ui_version: $IMAGE_NAME:$COMMIT_ID

      - name: check if branch exists in e2e test repo
        run: |
          export BRANCH_EXISTS=$(git ls-remote --exit-code --heads https://github.com/HSLdevcom/jore4-robot.git ${{ env.BRANCH_NAME }})
          if [ -n "$BRANCH_EXISTS" ]; then
            echo "Branch found in E2E test repository!"
          else
            echo "Branch not found in E2E test repository!"
          fi
          echo "BRANCH_EXISTS=${BRANCH_EXISTS}" >> "${GITHUB_ENV}"

      - name: run e2e smoke tests from branch
        if: ${{ env.BRANCH_EXISTS }}
        uses: HSLdevcom/jore4-robot/github-actions/run-rf-tests@actions-v1
        with:
          included_tag: smoke
          test_suite_version: ${{ env.BRANCH_NAME }}
          e2e_username: ${{ secrets.ROBOT_HSLID_EMAIL }}
          e2e_password: ${{ secrets.ROBOT_HSLID_PASSWORD }}

      - name: upload test results
        if: ${{ always() && env.BRANCH_EXISTS }}
        uses: HSLdevcom/jore4-robot/github-actions/upload-results@actions-v1
